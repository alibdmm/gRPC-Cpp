// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Calculator.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Calculator_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Calculator_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Calculator_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Calculator_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Calculator_2eproto;
namespace calculatorPackage {
class CalculatorReply;
struct CalculatorReplyDefaultTypeInternal;
extern CalculatorReplyDefaultTypeInternal _CalculatorReply_default_instance_;
class CalculatorRequest;
struct CalculatorRequestDefaultTypeInternal;
extern CalculatorRequestDefaultTypeInternal _CalculatorRequest_default_instance_;
}  // namespace calculatorPackage
PROTOBUF_NAMESPACE_OPEN
template<> ::calculatorPackage::CalculatorReply* Arena::CreateMaybeMessage<::calculatorPackage::CalculatorReply>(Arena*);
template<> ::calculatorPackage::CalculatorRequest* Arena::CreateMaybeMessage<::calculatorPackage::CalculatorRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace calculatorPackage {

// ===================================================================

class CalculatorRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculatorPackage.CalculatorRequest) */ {
 public:
  inline CalculatorRequest() : CalculatorRequest(nullptr) {}
  ~CalculatorRequest() override;
  explicit PROTOBUF_CONSTEXPR CalculatorRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CalculatorRequest(const CalculatorRequest& from);
  CalculatorRequest(CalculatorRequest&& from) noexcept
    : CalculatorRequest() {
    *this = ::std::move(from);
  }

  inline CalculatorRequest& operator=(const CalculatorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculatorRequest& operator=(CalculatorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculatorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalculatorRequest* internal_default_instance() {
    return reinterpret_cast<const CalculatorRequest*>(
               &_CalculatorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CalculatorRequest& a, CalculatorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CalculatorRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculatorRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculatorRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CalculatorRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CalculatorRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CalculatorRequest& from) {
    CalculatorRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalculatorRequest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculatorPackage.CalculatorRequest";
  }
  protected:
  explicit CalculatorRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNumber1FieldNumber = 1,
    kNumber2FieldNumber = 2,
  };
  // double number1 = 1;
  void clear_number1();
  double number1() const;
  void set_number1(double value);
  private:
  double _internal_number1() const;
  void _internal_set_number1(double value);
  public:

  // double number2 = 2;
  void clear_number2();
  double number2() const;
  void set_number2(double value);
  private:
  double _internal_number2() const;
  void _internal_set_number2(double value);
  public:

  // @@protoc_insertion_point(class_scope:calculatorPackage.CalculatorRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double number1_;
    double number2_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Calculator_2eproto;
};
// -------------------------------------------------------------------

class CalculatorReply final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:calculatorPackage.CalculatorReply) */ {
 public:
  inline CalculatorReply() : CalculatorReply(nullptr) {}
  ~CalculatorReply() override;
  explicit PROTOBUF_CONSTEXPR CalculatorReply(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CalculatorReply(const CalculatorReply& from);
  CalculatorReply(CalculatorReply&& from) noexcept
    : CalculatorReply() {
    *this = ::std::move(from);
  }

  inline CalculatorReply& operator=(const CalculatorReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline CalculatorReply& operator=(CalculatorReply&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CalculatorReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const CalculatorReply* internal_default_instance() {
    return reinterpret_cast<const CalculatorReply*>(
               &_CalculatorReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CalculatorReply& a, CalculatorReply& b) {
    a.Swap(&b);
  }
  inline void Swap(CalculatorReply* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CalculatorReply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CalculatorReply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CalculatorReply>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CalculatorReply& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CalculatorReply& from) {
    CalculatorReply::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CalculatorReply* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "calculatorPackage.CalculatorReply";
  }
  protected:
  explicit CalculatorReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // double result = 1;
  void clear_result();
  double result() const;
  void set_result(double value);
  private:
  double _internal_result() const;
  void _internal_set_result(double value);
  public:

  // @@protoc_insertion_point(class_scope:calculatorPackage.CalculatorReply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double result_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Calculator_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CalculatorRequest

// double number1 = 1;
inline void CalculatorRequest::clear_number1() {
  _impl_.number1_ = 0;
}
inline double CalculatorRequest::_internal_number1() const {
  return _impl_.number1_;
}
inline double CalculatorRequest::number1() const {
  // @@protoc_insertion_point(field_get:calculatorPackage.CalculatorRequest.number1)
  return _internal_number1();
}
inline void CalculatorRequest::_internal_set_number1(double value) {
  
  _impl_.number1_ = value;
}
inline void CalculatorRequest::set_number1(double value) {
  _internal_set_number1(value);
  // @@protoc_insertion_point(field_set:calculatorPackage.CalculatorRequest.number1)
}

// double number2 = 2;
inline void CalculatorRequest::clear_number2() {
  _impl_.number2_ = 0;
}
inline double CalculatorRequest::_internal_number2() const {
  return _impl_.number2_;
}
inline double CalculatorRequest::number2() const {
  // @@protoc_insertion_point(field_get:calculatorPackage.CalculatorRequest.number2)
  return _internal_number2();
}
inline void CalculatorRequest::_internal_set_number2(double value) {
  
  _impl_.number2_ = value;
}
inline void CalculatorRequest::set_number2(double value) {
  _internal_set_number2(value);
  // @@protoc_insertion_point(field_set:calculatorPackage.CalculatorRequest.number2)
}

// -------------------------------------------------------------------

// CalculatorReply

// double result = 1;
inline void CalculatorReply::clear_result() {
  _impl_.result_ = 0;
}
inline double CalculatorReply::_internal_result() const {
  return _impl_.result_;
}
inline double CalculatorReply::result() const {
  // @@protoc_insertion_point(field_get:calculatorPackage.CalculatorReply.result)
  return _internal_result();
}
inline void CalculatorReply::_internal_set_result(double value) {
  
  _impl_.result_ = value;
}
inline void CalculatorReply::set_result(double value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:calculatorPackage.CalculatorReply.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace calculatorPackage

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Calculator_2eproto
